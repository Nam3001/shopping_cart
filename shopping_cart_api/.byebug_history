exit
FlatProduct.all.where product_id: 108
FlatProduct.all
FlatProduct.find_by product_id: params[:id].to_i
FlatProduct
params[:id]
FlatProduct.find_by product_id: params[:id]
e.message
exit
FlatProduct.find(variant_to_delete&.to_i)
variant_to_delete
product_variants_to_delete
exit
product_variants
product_variant[:id]
exit
product_variants_to_delete
product_variants
exit
if product_variant[:id]
exit
product_variant[:id]
product_variant
product_variant[id]
exit
attribute_found = attribute_value_found.product_attribute
exit
attribute_values_found.attribute
attribute_values_found
attribute_value_found = attribute_values_found.first
exit
attribute_value_list
exit
product_attributes.flat_map do |attr| attr[:values] end
product_attributes.map do |attr| *attr[:values] end
product_attributes[0].values
product_attributes[0]
product_attributes.map do |attr| *attr.values end
product_attributes
exit
attribute_value_list[0]
attribute_value_list
exit
product_attributes
attribute_value
product_attributes.select {|value| value.value.upcase == attribute_value&.upcase}
attribute_value_list.select {|value| value.value.upcase == attribute_value&.upcase}
product_attributes.class
product_attributes
product_attributes.select {|value| value.value.upcase == attribute_value&.upcase}
product_attributes
exit
@variant_params[:product_variants_to_delete]&.values
exit
flat_products[0].id
flat_products[0]
flat_products[1].variant_values
flat_products[0].variant_values
flat_products[0]
@product.flat_products.each
@product.flat_products
@product.product_variants
exit
attributes_to_delete.length
product_attributes
exit
arr
arr.filter { |x| x > 2 }
arr = [1, 2, 3]
product_attributes.filter do |attr|
              attributes_to_delete.find_by(name: attr[:name]).nil?
            end
product_attributes
product_attributes.filter do |attr|
              attributes_to_delete.find_by name: attr[:name].nil?
            end
product_attributes
product_attributes.filter do |attr|
              attributes_to_delete.find_by name: attr[:name]
            end
product_attributes[0][:name]
product_attributes[0]
product_attributes
attributes_to_delete.find_by name: 'kích thước'
attributes_to_delete
product_attributes
product_attributes.include? do |attr| attr[:name] == 'kích thước' end
product_attributes.include do |attr| attr[:name] == 'kích thước' end
product_attributes.include do |attr| attr[:name] == 'kích thước'
product_attributes
exit
is_product_attribute_need_to_update
is_product_attribute_need_to_delete
exit
product_attributes
exit
flat_product[:variant_values]
variant_values
attribute_to_handle[:values_to_delete]
sku
variant_value_indexes_to_delete
exit
attribute_to_handle
exit
attribute_to_handle
product_attribute_with_same_name
attribute_to_handle
attribute_to_handle[:values]
exit
product_attributes[0][:name]
product_attributes.find {|attr| attr[:name] == attribute_to_handle[:name]}
product_attributes
product_attributes.find {|attr| attr[:name] == attribute_to_handle[:name]}
attribute_to_handle[:name]
attribute_to_handle
is_exist_attribute
product_attributes
exit
attributes.values[0]
attributes.class
attributes
attributes[0]
attributes[0].class
attributes
attribute
attributes
attribute.class
attribute
attribute[:name]
exit
attr[:values].uniq
attr[:values]
attr
attr = attributes.values[0]
attributes.values[0]
attributes
attribute = attributes[0]
attributes&.values.class
attributes&.values&.uniq!
attributes&.values
exit
attribute_values
is_attribute_values_match
exit
values
attribute_values
attribute_found
attributes
exit
attributes
attribute_found
exit
attributes
attribute_found
exit
attribute_values_found = attribute_value_list.select {|value| value.value == attribute_value}
exit
attributes_to_delete.include?
exit
variant_values
variant_value_indexes_to_delete
exit
variant_values
variant_value_indexes_to_delete
sku
variant_values
exit
attribute_to_delete_values.find_by value: variant_value[:value]
variant_value[:value]
attribute_to_delete_values
exit
attribute_to_delete_values
variant_value[:value]
attribute_to_delete_values.find_by value: variant_value[:value]
attribute_to_delete_values.class.where value: variant_value[:value]
attribute_to_delete_values.class.select value: variant_value[:value]
attribute_to_delete_values.class.find_by value: variant_value[:value]
attribute_to_delete_values.class
attribute_to_delete_values
variant_values
variant_value
exit
sku
attribute_to_delete_values
exit
variant_values
 variant_values = JSON.parse(flat_product[:variant_values], symbolize_names: true)
exit
variant_values
attribute_values.length
attribute_values[0]
attribute_values
exit
attributes_to_delete[0].attribute_values
attributes_to_delete[0]
attributes_to_delete
exit
attributes_to_delete
exit
attributes_to_delete.include? attribute_to_handle[:name]
attribute_to_handle
variant_to_handle
attributes_to_delete
exit
@variant_params[:attributes]
a@variant_params[:attributes]
 @variant_params[:product_variants_to_delete]&.values
 @variant_params[:attributes_to_delete]
 @variant_params[:product_variants]&.values
exit
exir
@variant_params[:attributes_to_delete]
exit
@variant_params
attributes_to_delete
exit
attributes_to_delete
exit
variant_values
variant_values.delete_at 1
variant_values[1]
variant_values
variant_value_indexes_to_delete
AttributeValue.find 4
AttributeValue.all
FlatProduct
flat_product
sku
exit
variant_value[:value_id]
exit
variant_value[:value]
variant_value
variant_value[:value_id]
sku
exit
sku
exit
sku
exit
ActiveModelSerializers::SerializableResource.new(@product, each_serializer: ProductSerializer).as_json
@product.to_json
@product
exit
variant_values = JSON.parse(flat_products[0][:variant_values])
flat_products[0][:variant_values]
flat_products[0]variant_values = JSON.parse(flat_product[:variant_values])
flat_products.each
flat_products
exit
flat_product
flat_products
exit
product_attributes
exit
product_attributes
