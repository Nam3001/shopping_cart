exit
@product.thumbnails.length
 thumbnails_to_delete.each(&:purge)
@product.thumbnails.length
exit
@product.thumbnails.length
@product.thumbnails.where(id: thumbnails_id_to_delete).length
 thumbnails_to_delete.each(&:purge)
@product.thumbnails.where(id: thumbnails_id_to_delete).length
@product.thumbnails.where(id: thumbnails_id_to_delete)
exit
self.thumbnails.length
Rails.cache.read(cache_key).thumbnails.length
Rails.cache.read cache_key
 cache_key = "product/#{id}"
exit
 RedisHelper.update_cache(cache_key, self)
 cache_key = "product/#{id}"
 RedisHelper.delete_pagination_cache("category/#{category_id}/products/all")
  RedisHelper.delete_pagination_cache("category/#{category_id}/products/all")
   53:
   54:       cache_key = "product/#{id}"
   55:       RedisHelper.update_cache(cache_key, self)
exit
Rails.cache.read(cache_key).thumbnails.length
Rails.cache.read(cache_key)
 RedisHelper.update_cache(cache_key, self)
cache_key = "product/#{id}"
 RedisHelper.update_cache(cache_key, self)
self.thumbnails.length
exit
exxit
@product.thumbnails.length
@product
exit
params[:thumbnails_id_to_delete]
params
exit
ActiveModelSerializers::SerializableResource.new(self).as_json
ActiveModelSerializers::SerializableResource
ActiveModelSerializers
ActiveModelSerializer
self
object
exit
params[:thumbnails_id_to_delete]
exit
@product.thumbnails.attach(newThumbnails)
exit
exxit
@product.thumbnails.attach(newThumbnails)
exit
@product.thumbnails.attach(newThumbnails)
exit
@product.thumbnails.attach(newThumbnails)
@product.thumbnails
exit
@product.thumbnails.length
@product.thumbnails.attach(newThumbnails)
newThumbnails.length
newThumbnails.class
newThumbnails
newThumbnails.original_filename
newThumbnails
@product.thumbnails.attach(
              io: newThumbnails,
              filename: newThumbnails.original_filename,
              content_type: newThumbnails.content_type
            )
@product.thumbnails.length
@product.thumbnails.attach params[:thumbnails]
exit
params[:thumbnails]
newThumbnail
@product.thumbnails.length
@product
@product.thumbnails
exit
params[:thumbnails]
exit
params[:thumbnails]
exit
params[:thumbnails]
exit
Product.new(product_params)
params[:thumbnails]
exit
params[:thumbnails]
exit
params[:thumbnails]
exit
params[:thumbnails]
product_params
exit
Product.new(product_params)
product_params
exit
Product.find 24
@product
exit
url_for(product.thumbnail)
product = Product.find 8
url_for(@product.thumbnail)
exit
Rails.application.credentials.dig(:secret_key_base)
Rails.application.credentials
ENV["AUTH_SECRET"] || Rails.application.credentials.dig(:secret_key_base)
refresh_token
JsonWebToken.decode(refresh_token)
exit
category_id
exit
previous_changes
saved_changes
exit
ẽexit
exit
product.errors.full_messages
product
product.save
product
exit
token
exit
authorize @category
authorize
exit
authorize @category
@category.class
@category
exit
 params.permit(:product_name, :quantity, :price, :unit_id, :thumbnail)
params
exit
params
exit
status
exit
Rails.cache.write(cache_key, value)
cache_key
value
exit
object.is_a? Product
object.class
object[:thumbnail_url]
object.thumbnail
object.thumbnail_url
object
exit
object
exit
ẽit
object
exit
object[:thumbnail_url]
object.thumbnail_url
object
exit
object.class
object
exit
Product === object
object === Product
object << Product
object.class
object.thumbnail
object[:thumbnail_url]
object
exit
product.thumbnail_url
product.thumbnail
product
exit
p.thumbnail.attached
p.thumbnail
p.as_json.merge(thumbnail_url: p.thumbnail.attached ? Rails.application.routes.url_helpers.rails_blob_url(p.thumbnail) : "")
p.thumbnail
p.class
p
exit
paginatedProduct.class
exit
paginatedProduct.class
paginatedProduct
exit
p.thumbnail
p2.thumbnail
p2.class
paginatedProduct.class
p2.thumbnail
p.as_json
p2.as_json
product.as_json
p2.class
p2 = Product.find 1
Product.find(1).class
Product.find(1)
p.class
p
p.thumbnail
p = paginatedProduct.where(id: 1)
paginatedProduct.where(id: 1)
paginatedProduct.map { |p| p.as_json.merge(thumbnail_url: p.thumbnail.attached ? Rails.application.routes.url_helpers.rails_blob_url(p.thumbnail) : "")}
paginatedProduct.map { |p| p.as_json.merge(thumbnail_url: p.thumbnail.attached ? Rails.application.routes.url_helpers.rails_blob_url(p.thumbnail) : "")},
paginatedProduct
exit
products[:products]
products[:pagination]
product[:pagination]
products
products.class
products.pagination
products
exit
p.as_json
p
p = paginatedProduct.where(id: 1)
paginatedProduct.where(id: 1)
paginatedProduct.find(id: 1)
paginatedProduct.class
paginatedProduct.current_page
Product.with_attached_thumbnail.order(updated_at: :desc).page(page).per(per_page)
paginatedProduct
exit
prod.destroy?
prod
prod = Product.find(params[:id])
@product.destroy?
exit
@product.destroy
@product.destroy?
@product.class
@product
exit
"shopping_cart:#{@@products_cache_key}/page=*"
   exit
"shopping_cart:#{@@detail_product_cache_key}/page=*"
"shopping_cart:#{@@detail_product_cache_key}/page=*
exit
"#{@@detail_product_cache_key}/page=*"
cache_key = "#{@@detail_product_cache_key}/#{params[:id]}"
delete_pagination_products_cache
@product
updatedProduct
exit
current_user
exit
product
user
exit
user
exit
policy.public_send(:create?)
policy
exit
user
